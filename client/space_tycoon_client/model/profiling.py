# coding: utf-8

"""
    Space Tycoon

    Space Tycoon server.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from space_tycoon_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    NoneClass,
    BoolClass,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class Profiling(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    tick = Int64Schema
    movement = Int64Schema
    attacks = Int64Schema
    trades = Int64Schema
    recipes = Int64Schema
    prices = Int64Schema
    constructions = Int64Schema
    report = Int64Schema
    total = Int64Schema
    overall = Int64Schema
    at = Int64Schema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        tick: typing.Union[tick, Unset] = unset,
        movement: typing.Union[movement, Unset] = unset,
        attacks: typing.Union[attacks, Unset] = unset,
        trades: typing.Union[trades, Unset] = unset,
        recipes: typing.Union[recipes, Unset] = unset,
        prices: typing.Union[prices, Unset] = unset,
        constructions: typing.Union[constructions, Unset] = unset,
        report: typing.Union[report, Unset] = unset,
        total: typing.Union[total, Unset] = unset,
        overall: typing.Union[overall, Unset] = unset,
        at: typing.Union[at, Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'Profiling':
        return super().__new__(
            cls,
            *args,
            tick=tick,
            movement=movement,
            attacks=attacks,
            trades=trades,
            recipes=recipes,
            prices=prices,
            constructions=constructions,
            report=report,
            total=total,
            overall=overall,
            at=at,
            _configuration=_configuration,
            **kwargs,
        )
