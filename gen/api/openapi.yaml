openapi: 3.0.1
info:
  contact:
    url: https://www.garage-trip.cz/
  description: Space Tycoon server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Space Tycoon
  version: 1.0.0
externalDocs:
  description: Find out more about Space Tycoon game
  url: https://github.com/gdg-garage/space-tycoon
servers:
- url: https://space-tycoon.garage-trip.cz/api/
tags:
- description: Interact with the game
  name: game
paths:
  /login:
    post:
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerId'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid name or password
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid input
      summary: Get user session
      tags:
      - game
      x-contentType: '*/*'
      x-accepts: application/json
  /static-data:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticData'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Please login again
      summary: Data that do not change during entire season, such as ships classes.
      tags:
      - game
      x-accepts: application/json
  /data:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Please login again
      summary: Dynamic game data (scores, prices, spaceship positions)
      tags:
      - game
      x-accepts: application/json
  /commands:
    post:
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Commands'
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Please login again
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandError'
          description: Invalid input
      summary: Specify commands for your ships
      tags:
      - game
      x-contentType: '*/*'
      x-accepts: application/json
  /end-turn:
    post:
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EndTurn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentTick'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Please login again
        "405":
          content: {}
          description: Invalid input
      summary: Signal that your turn is over for the current tick. Returns the current
        tick and the approximate time until the next tick.
      tags:
      - game
      x-contentType: '*/*'
      x-accepts: application/json
  /current-tick:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentTick'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Please login again
      summary: Returns the current tick, season and the approximate time until the
        next tick.
      tags:
      - game
      x-accepts: application/json
  /reports:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Please login again
      summary: Fetch statistical data about all players.
      tags:
      - game
      x-accepts: application/json
components:
  schemas:
    Command:
      example:
        amount: 1
        resource: 6
        destination:
          coordinates:
          - 10
          - 20
          target: 234
        ship-class: 5
        name: name
        type: type
        target: 0
      nullable: true
      properties:
        type:
          type: string
        target:
          format: int64
          nullable: true
          type: integer
        destination:
          $ref: '#/components/schemas/Destination'
        resource:
          format: int64
          nullable: true
          type: integer
        amount:
          format: int64
          nullable: true
          type: integer
        ship-class:
          format: int64
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
      required:
      - type
    MoveCommand:
      properties:
        type:
          type: string
        destination:
          $ref: '#/components/schemas/Destination'
      required:
      - destination
      - type
      type: object
    StopCommand:
      type: object
    ConstructCommand:
      properties:
        ship-class:
          format: int64
          nullable: true
          type: integer
        type:
          type: string
      required:
      - ship-class
      - type
      type: object
    DecommissionCommand:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    RenameCommand:
      properties:
        type:
          type: string
        name:
          nullable: true
          type: string
      required:
      - name
      - type
      type: object
    AttackCommand:
      properties:
        type:
          type: string
        target:
          format: int64
          nullable: true
          type: integer
      required:
      - target
      - type
      type: object
    TradeCommand:
      properties:
        type:
          type: string
        amount:
          description: Positive value means buy, negative sell.
          format: int64
          nullable: true
          type: integer
        resource:
          format: int64
          nullable: true
          type: integer
        target:
          description: Any planet or own ship.
          format: int64
          nullable: true
          type: integer
      required:
      - amount
      - resource
      - target
      - type
      type: object
    RepairCommand:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    Destination:
      example:
        coordinates:
        - 10
        - 20
        target: 234
      nullable: true
      properties:
        coordinates:
          example:
          - 10
          - 20
          items:
            format: int64
            type: integer
          maxItems: 2
          minItems: 2
          nullable: true
          type: array
        target:
          example: 234
          format: int64
          nullable: true
          type: integer
      type: object
    Waypoint:
      example: 234
      format: int64
      nullable: true
      type: integer
    Coordinates:
      example:
      - 10
      - 20
      items:
        format: int64
        type: integer
      maxItems: 2
      minItems: 2
      nullable: true
      type: array
    Commands:
      additionalProperties:
        $ref: '#/components/schemas/Command'
      type: object
    Credentials:
      example:
        password: password
        username: username
        player: player
      properties:
        username:
          type: string
        password:
          type: string
        player:
          type: string
      required:
      - password
      - player
      - username
      type: object
    StaticData:
      example:
        ship-classes:
          "1":
            name: mothership
            shipyard: true
            speed: 10
            cargo-capacity: 100
            life: 360
            damage: 30
          "2":
            name: hauler
            shipyard: false
            speed: 13
            cargo-capacity: 200
            life: 200
            damage: 0
            price: 500000
        resource-names:
          "1": spice melange
          "2": pokeballs
      properties:
        ship-classes:
          additionalProperties:
            $ref: '#/components/schemas/ShipClass'
          type: object
        resource-names:
          additionalProperties:
            type: string
          type: object
      type: object
    Color:
      example:
      - 0
      - 255
      - 255
      items:
        format: int32
        type: integer
      maxItems: 3
      maximum: 255
      minItems: 3
      minimum: 0
      type: array
    Planet:
      example:
        name: Aldebaran
        position:
        - -13
        - 25
        prev-position:
        - -13
        - 25
        resources:
          "1":
            amount: 0
            buy-price: 500
          "5":
            amount: 20
            sell-price: 230.5
      properties:
        name:
          type: string
        resources:
          additionalProperties:
            $ref: '#/components/schemas/TradingResource'
          type: object
        position:
          example:
          - 10
          - 20
          items:
            format: int64
            type: integer
          maxItems: 2
          minItems: 2
          nullable: true
          type: array
        prev-position:
          example:
          - 10
          - 20
          items:
            format: int64
            type: integer
          maxItems: 2
          minItems: 2
          nullable: true
          type: array
      required:
      - name
      - position
      - prev-position
      - resources
      type: object
    PlayerId:
      example:
        id: 3
      properties:
        id:
          format: int64
          type: integer
      type: object
    Combat:
      example:
        combat:
          tick: 126
          attacker: 15
          defender: 12
          killed: false
      properties:
        tick:
          format: int64
          type: integer
        attacker:
          format: int64
          type: integer
        defender:
          format: int64
          type: integer
        killed:
          type: boolean
      type: object
    Profiling:
      example:
        recipes: 5
        total: 3
        at: 4
        attacks: 1
        constructions: 7
        report: 9
        trades: 5
        overall: 2
        tick: 0
        prices: 2
        movement: 6
      properties:
        tick:
          format: int64
          type: integer
        movement:
          format: int64
          type: integer
        attacks:
          format: int64
          type: integer
        trades:
          format: int64
          type: integer
        recipes:
          format: int64
          type: integer
        prices:
          format: int64
          type: integer
        constructions:
          format: int64
          type: integer
        report:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
        overall:
          format: int64
          type: integer
        at:
          format: int64
          type: integer
      type: object
    Price:
      additionalProperties:
        properties:
          tick:
            format: int64
            type: integer
          buyer:
            format: int64
            type: integer
          seller:
            format: int64
            type: integer
          resource:
            format: int64
            type: integer
          amount:
            format: int64
            type: integer
          price:
            format: int64
            type: integer
        type: object
      example:
        "1":
          tick: 10
          buyer: 2
          seller: 3
          resource: 30
          amount: 21
          price: 60
      type: object
    Score:
      additionalProperties:
        properties:
          money:
            items:
              additionalProperties:
                format: int64
                type: integer
              type: object
            type: array
          resources:
            items:
              additionalProperties:
                format: int64
                type: integer
              type: object
            type: array
          ships:
            items:
              additionalProperties:
                format: int64
                type: integer
              type: object
            type: array
          total:
            items:
              additionalProperties:
                format: int64
                type: integer
              type: object
            type: array
        type: object
      example:
        "1":
          money:
            "125": 123456
            "126": 123000
            "127": 123564
          resources:
            "125": 123456
            "126": 123000
            "127": 123564
          ships:
            "125": 123456
            "126": 123000
            "127": 123564
          total:
            "125": 123456
            "126": 123000
            "127": 123564
      type: object
    Trade:
      example:
        tick: 127
        buyer: 12
        seller: 10
        resource: 1
        amount: 5
        price: 450
      properties:
        tick:
          format: int64
          type: integer
        buyer:
          format: int64
          type: integer
        seller:
          format: int64
          type: integer
        resource:
          format: int64
          type: integer
        amount:
          format: int64
          type: integer
        price:
          format: int64
          type: integer
      type: object
    Reports:
      example:
        trade:
        - tick: 127
          buyer: 12
          seller: 10
          resource: 1
          amount: 5
          price: 450
        - tick: 127
          buyer: 12
          seller: 10
          resource: 1
          amount: 5
          price: 450
        profiling:
        - recipes: 5
          total: 3
          at: 4
          attacks: 1
          constructions: 7
          report: 9
          trades: 5
          overall: 2
          tick: 0
          prices: 2
          movement: 6
        - recipes: 5
          total: 3
          at: 4
          attacks: 1
          constructions: 7
          report: 9
          trades: 5
          overall: 2
          tick: 0
          prices: 2
          movement: 6
        scores:
        - "1":
            money:
              "125": 123456
              "126": 123000
              "127": 123564
            resources:
              "125": 123456
              "126": 123000
              "127": 123564
            ships:
              "125": 123456
              "126": 123000
              "127": 123564
            total:
              "125": 123456
              "126": 123000
              "127": 123564
        - "1":
            money:
              "125": 123456
              "126": 123000
              "127": 123564
            resources:
              "125": 123456
              "126": 123000
              "127": 123564
            ships:
              "125": 123456
              "126": 123000
              "127": 123564
            total:
              "125": 123456
              "126": 123000
              "127": 123564
        combat:
        - combat:
            tick: 126
            attacker: 15
            defender: 12
            killed: false
        - combat:
            tick: 126
            attacker: 15
            defender: 12
            killed: false
        prices:
        - "1":
            tick: 10
            buyer: 2
            seller: 3
            resource: 30
            amount: 21
            price: 60
        - "1":
            tick: 10
            buyer: 2
            seller: 3
            resource: 30
            amount: 21
            price: 60
      properties:
        combat:
          items:
            $ref: '#/components/schemas/Combat'
          type: array
        profiling:
          description: Profiling information about the game. Used by the visualization
            website.
          items:
            $ref: '#/components/schemas/Profiling'
          type: array
        prices:
          description: Prices are average across all planets.
          items:
            $ref: '#/components/schemas/Price'
          type: array
        scores:
          items:
            $ref: '#/components/schemas/Score'
          type: array
        trade:
          items:
            $ref: '#/components/schemas/Trade'
          type: array
      type: object
    Resource:
      properties:
        amount:
          format: int64
          type: integer
      required:
      - amount
      type: object
    TradingResource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/TradingResource_allOf'
    Resources:
      additionalProperties:
        $ref: '#/components/schemas/Resource'
      type: object
    TradingResources:
      additionalProperties:
        $ref: '#/components/schemas/TradingResource'
      type: object
    Player:
      properties:
        name:
          type: string
        color:
          example:
          - 0
          - 255
          - 255
          items:
            format: int32
            type: integer
          maxItems: 3
          maximum: 255
          minItems: 3
          minimum: 0
          type: array
        net-worth:
          $ref: '#/components/schemas/NetWorth'
      required:
      - color
      - name
      - net-worth
      type: object
    Ship:
      example:
        name: Milenium Falcon
        position:
        - -13
        - 25
        prev-position:
        - -12
        - 27
        resources:
          "1":
            amount: 5
          "5":
            amount: 7
        ship-class: 2
        player: 3
        life: 189
        command:
          type: trade
          target: 10
          resource: 5
          amount: -7
      properties:
        ship-class:
          format: int64
          type: integer
        life:
          format: int64
          type: integer
        name:
          type: string
        player:
          format: int64
          type: integer
        position:
          example:
          - 10
          - 20
          items:
            format: int64
            type: integer
          maxItems: 2
          minItems: 2
          nullable: true
          type: array
        prev-position:
          example:
          - 10
          - 20
          items:
            format: int64
            type: integer
          maxItems: 2
          minItems: 2
          nullable: true
          type: array
        resources:
          additionalProperties:
            $ref: '#/components/schemas/Resource'
          type: object
        command:
          $ref: '#/components/schemas/Command'
      required:
      - life
      - name
      - player
      - position
      - prev-position
      - resources
      - ship-class
      type: object
    NetWorth:
      example:
        money: 123456
        resources: 123456
        ships: 123456
        total: 123456
      properties:
        money:
          format: int64
          type: integer
        resources:
          format: int64
          type: integer
        ships:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - money
      - resources
      - ships
      - total
      type: object
    Data:
      example:
        planets:
          "10":
            name: Aldebaran
            position:
            - -13
            - 25
            prev-position:
            - -13
            - 25
            resources:
              "1":
                amount: 0
                buy-price: 500
              "5":
                amount: 20
                sell-price: 230.5
        ships:
          "12":
            name: Milenium Falcon
            position:
            - -13
            - 25
            prev-position:
            - -12
            - 27
            resources:
              "1":
                amount: 5
              "5":
                amount: 7
            ship-class: 2
            player: 3
            life: 189
            command:
              type: trade
              target: 10
              resource: 5
              amount: -7
          "15":
            name: Nostromo
            position:
            - -13
            - 25
            prev-position:
            - -12
            - 27
            resources: {}
            ship-class: 1
            player: 1
            life: 1000
          "17":
            name: Invisible Hand I
            position:
            - 10
            - 10
            prevPos:
            - 5
            - 5
            resources: {}
            ship-class: 2
            player: 3
            life: 200
            command:
              type: move
              coordinates:
              - 131
              - 128
          "19":
            name: Invisible Hand II
            position:
            - 5
            - 5
            prev-position:
            - 0
            - 0
            resources: {}
            ship-class: 2
            player: 3
            life: 200
            command:
              type: move
              target: 17
      properties:
        current-tick:
          $ref: '#/components/schemas/CurrentTick'
        planets:
          additionalProperties:
            $ref: '#/components/schemas/Planet'
          type: object
        player-id:
          format: int64
          nullable: true
          type: integer
        players:
          additionalProperties:
            $ref: '#/components/schemas/Player'
          type: object
        ships:
          additionalProperties:
            $ref: '#/components/schemas/Ship'
          type: object
      required:
      - current-tick
      - planets
      - players
      - ships
      type: object
    CurrentTick:
      example:
        tick: 165
        time-left-ms: 350
        season: 13
      properties:
        tick:
          format: int64
          type: integer
        time-left-ms:
          format: int64
          type: integer
        season:
          format: int64
          type: integer
      required:
      - season
      - tick
      - time-left-ms
      type: object
    EndTurn:
      example:
        tick: 3600
      properties:
        tick:
          format: int64
          type: integer
      required:
      - tick
      type: object
    Error:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    CommandError:
      additionalProperties:
        type: string
      description: Map of all commands that failed to be processed
      example:
        "1": required field 'destination' is zero value
        "4": 'move command: forbidden to specify both coordinates and target'
      type: object
    ShipClass:
      example:
        name: mothership
        shipyard: true
        speed: 10
        cargo-capacity: 100
        life: 360
        damage: 30
      properties:
        name:
          type: string
        shipyard:
          description: whether ships of this class are allowed to construct new ships
          type: boolean
        speed:
          format: double
          type: number
        cargo-capacity:
          description: maximum number of resources the ship can carry - sum over all
            types of resources
          format: int64
          type: integer
        life:
          format: int64
          type: integer
        damage:
          format: int64
          type: integer
        price:
          format: int64
          type: integer
      required:
      - cargo-capacity
      - damage
      - life
      - name
      - price
      - shipyard
      - speed
      type: object
    TradingResource_allOf:
      properties:
        buy-price:
          format: double
          type: number
        sell-price:
          format: double
          type: number

