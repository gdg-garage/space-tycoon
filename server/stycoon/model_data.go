/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type Data struct {

	CurrentTick CurrentTick `json:"current-tick"`

	Planets map[string]PlanetsValue `json:"planets"`

	PlayerId *int64 `json:"player_id,omitempty"`

	Players map[string]PlayersValue `json:"players"`

	Ships map[string]ShipsValue `json:"ships"`
}

// AssertDataRequired checks if the required fields are not zero-ed
func AssertDataRequired(obj Data) error {
	elements := map[string]interface{}{
		"current-tick": obj.CurrentTick,
		"planets": obj.Planets,
		"players": obj.Players,
		"ships": obj.Ships,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCurrentTickRequired(obj.CurrentTick); err != nil {
		return err
	}
	return nil
}

// AssertRecurseDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Data (e.g. [][]Data), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aData, ok := obj.(Data)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDataRequired(aData)
	})
}
