/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type DataReports struct {

	Combat []Combat `json:"combat,omitempty"`

	Trade []Trade `json:"trade,omitempty"`
}

// AssertDataReportsRequired checks if the required fields are not zero-ed
func AssertDataReportsRequired(obj DataReports) error {
	for _, el := range obj.Combat {
		if err := AssertCombatRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Trade {
		if err := AssertTradeRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseDataReportsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DataReports (e.g. [][]DataReports), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDataReportsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDataReports, ok := obj.(DataReports)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDataReportsRequired(aDataReports)
	})
}
