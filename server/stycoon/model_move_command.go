/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type MoveCommand struct {
	Command

	Destination Destination `json:"destination,omitempty"`
}

// AssertMoveCommandRequired checks if the required fields are not zero-ed
func AssertMoveCommandRequired(obj MoveCommand) error {
	elements := map[string]interface{}{
		"class": obj.Class,
		"name": obj.Name,
		"target": obj.Target,
		"resource": obj.Resource,
		"amount": obj.Amount,
		"where": obj.Where,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCommandRequired(obj.Command); err != nil {
		return err
	}

	if err := AssertDestinationRequired(obj.Destination); err != nil {
		return err
	}
	return nil
}

// AssertRecurseMoveCommandRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MoveCommand (e.g. [][]MoveCommand), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMoveCommandRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMoveCommand, ok := obj.(MoveCommand)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMoveCommandRequired(aMoveCommand)
	})
}
