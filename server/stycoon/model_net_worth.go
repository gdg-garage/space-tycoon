/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type NetWorth struct {

	Money int64 `json:"money"`

	Resources int64 `json:"resources"`

	Ships int64 `json:"ships"`

	Total int64 `json:"total"`
}

// AssertNetWorthRequired checks if the required fields are not zero-ed
func AssertNetWorthRequired(obj NetWorth) error {
	elements := map[string]interface{}{
		"money": obj.Money,
		"resources": obj.Resources,
		"ships": obj.Ships,
		"total": obj.Total,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseNetWorthRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NetWorth (e.g. [][]NetWorth), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNetWorthRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNetWorth, ok := obj.(NetWorth)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNetWorthRequired(aNetWorth)
	})
}
