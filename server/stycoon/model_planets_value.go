/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type PlanetsValue struct {
	Name string `json:"name"`

	Resources map[string]TradingResource `json:"resources"`

	Position []int64 `json:"position"`

	PrevPosition []int64 `json:"prev-position"`
}

// AssertPlanetsValueRequired checks if the required fields are not zero-ed
func AssertPlanetsValueRequired(obj PlanetsValue) error {
	elements := map[string]interface{}{
		"name":          obj.Name,
		"resources":     obj.Resources,
		"position":      obj.Position,
		"prev-position": obj.PrevPosition,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePlanetsValueRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PlanetsValue (e.g. [][]PlanetsValue), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePlanetsValueRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPlanetsValue, ok := obj.(PlanetsValue)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPlanetsValueRequired(aPlanetsValue)
	})
}
