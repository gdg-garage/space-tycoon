/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type Wreck struct {

	ShipClass string `json:"shipClass"`

	Name string `json:"name"`

	Player string `json:"player"`

	KillTick int64 `json:"killTick"`

	Position *[]int64 `json:"position"`
}

// AssertWreckRequired checks if the required fields are not zero-ed
func AssertWreckRequired(obj Wreck) error {
	elements := map[string]interface{}{
		"shipClass": obj.ShipClass,
		"name": obj.Name,
		"player": obj.Player,
		"killTick": obj.KillTick,
		"position": obj.Position,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseWreckRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Wreck (e.g. [][]Wreck), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseWreckRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aWreck, ok := obj.(Wreck)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertWreckRequired(aWreck)
	})
}
