/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type Wrecks struct {

	ShipClass string `json:"ship-class"`

	Name string `json:"name"`

	Player string `json:"player"`

	KillTick int64 `json:"kill-tick"`

	Position *[]int64 `json:"position"`
}

// AssertWrecksRequired checks if the required fields are not zero-ed
func AssertWrecksRequired(obj Wrecks) error {
	elements := map[string]interface{}{
		"ship-class": obj.ShipClass,
		"name": obj.Name,
		"player": obj.Player,
		"kill-tick": obj.KillTick,
		"position": obj.Position,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseWrecksRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Wrecks (e.g. [][]Wrecks), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseWrecksRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aWrecks, ok := obj.(Wrecks)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertWrecksRequired(aWrecks)
	})
}
