/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type ConstructCommand struct {
	Command

	Class string `json:"class"`

	Name string `json:"name,omitempty"`
}

// AssertConstructCommandRequired checks if the required fields are not zero-ed
func AssertConstructCommandRequired(obj ConstructCommand) error {
	elements := map[string]interface{}{
		"class": obj.Class,
		"name": obj.Name,
		"target": obj.Target,
		"resource": obj.Resource,
		"amount": obj.Amount,
		"where": obj.Where,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCommandRequired(obj.Command); err != nil {
		return err
	}

	return nil
}

// AssertRecurseConstructCommandRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ConstructCommand (e.g. [][]ConstructCommand), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConstructCommandRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConstructCommand, ok := obj.(ConstructCommand)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConstructCommandRequired(aConstructCommand)
	})
}
