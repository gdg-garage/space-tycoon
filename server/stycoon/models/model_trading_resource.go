/*
 * Space Tycoon
 *
 * Space Tycoon server.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stycoon

type TradingResource struct {

	Amount int64 `json:"amount"`

	BuyPrice float64 `json:"buy-price,omitempty"`

	SellPrice float64 `json:"sell-price,omitempty"`
}

// AssertTradingResourceRequired checks if the required fields are not zero-ed
func AssertTradingResourceRequired(obj TradingResource) error {
	elements := map[string]interface{}{
		"amount": obj.Amount,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseTradingResourceRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TradingResource (e.g. [][]TradingResource), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTradingResourceRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTradingResource, ok := obj.(TradingResource)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTradingResourceRequired(aTradingResource)
	})
}
